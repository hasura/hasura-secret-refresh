name: Build and scan services

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *" # Daily midnight
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix information
        uses: actions/github-script@v3
        id: set-matrix
        with:
          script: |
            var services = [
              {
                name: 'hasura-secret-refresher',
                dockerContextPath: '.',
                dockerFilePath: 'Dockerfile'
              }
            ];

            core.setOutput('matrix', JSON.stringify(services));
  build-and-scan:
    name: ${{ matrix.service.name }}
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        service: ${{ fromJson(needs.setup.outputs.matrix) }}
      fail-fast: false
    permissions:
      contents: "read"
      id-token: "write"
      security-events: "write"
      actions: "read"
    steps:
      - uses: actions/checkout@v4

      - id: gcloud-auth
        name: Authenticate to Google Cloud ðŸ”‘
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          service_account: "hasura-ci-docker-writer@hasura-ddn.iam.gserviceaccount.com"
          workload_identity_provider: "projects/1025009031284/locations/global/workloadIdentityPools/hasura-ddn/providers/github"

      - name: Login to Google Container Registry ðŸ“¦
        uses: "docker/login-action@v3"
        with:
          registry: "us-docker.pkg.dev"
          username: "oauth2accesstoken"
          password: "${{ steps.gcloud-auth.outputs.access_token }}"

      - name: Login to Google Container Registry ðŸ“¦
        uses: "docker/login-action@v3"
        with:
          registry: "gcr.io"
          username: "oauth2accesstoken"
          password: "${{ steps.gcloud-auth.outputs.access_token }}"

      - name: Build ${{ matrix.service.name }}
        run: |
          echo "Building ${{ matrix.service.name }}"
          export TAG="${GITHUB_SHA::8}"
          export DOCKER_IMG="ghcr.io/hasura/${{ matrix.service.name }}:${TAG}"
          docker build -t $DOCKER_IMG ${{ matrix.service.dockerContextPath }} -f ${{ matrix.service.dockerFilePath }} 
          echo "DOCKER_IMG = $DOCKER_IMG"
          echo "DOCKER_IMG=${DOCKER_IMG}" >> $GITHUB_ENV

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: ${{ env.DOCKER_IMG }}
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
